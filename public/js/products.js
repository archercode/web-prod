App.ProductsRoute=Ember.Route.extend({model:function(){var url='/recipes/';var store=this.store;return Ember.$.getJSON(url).then(function(data){var arrData=[];for(var i=0,len=data.length;i<len;i++){store.createRecord('product',{title:data[i]['title'],price:data[i]['price'],model:data[i]['model'],description:data[i]['description'],type:data[i]['type'],image:data[i]['image'],});}
return data;});},});App.ProductsIndexView=Ember.View.extend({didInsertElement:function(){var view=this;$(window).bind("scroll",function(){view.didScroll();});},didScroll:function(){if(this.isScrolledToBottom()){this.get('controller').send('loadMoreItems');}},isScrolledToBottom:function(){var distanceToTop=$(document).height()-$(window).height(),top=$(document).scrollTop();return top===distanceToTop;},willDestroyElement:function(){$(window).unbind("scroll");}});App.ProductsIndexRoute=Ember.Route.extend({tempStorage:function(){return this.modelFor('products');},showItems:3,mod:[],prodController:null,appController:null,queryField:null,beforeModel:function(transition){prodController=this.controllerFor('products');prodController.set('previousTransition','today');appController=this.controllerFor('application');var q=appController.get('queryField');this.set('queryField',q);},model:function(params){if(!this.get('queryField')){for(var i=0;i<3;++i){this.mod[i]=this.tempStorage()[i];}
this.incrementProperty('this.showItems',3);return this.mod;}
var regex=new RegExp(this.get('queryField'),'i');return this.modelFor('products').filter(function(product){return regex.exec(product.title);});},actions:{queryParamsDidChange:function(){this.refresh();},willTransition:function(){prodController.set('previousTransition','tomorrow');},ref:function(){this.refresh();},demo:function(){console.log('demo');},loadItems:function(){if(!this.queryField){var items=this.modelFor('products_index');var prod=this.modelFor('products');var last=prod.length;for(var i=this.showItems-3;i<this.showItems;i++){if(last>i){items.addObject(prod[i]);}}
this.incrementProperty('showItems',3);}},},});App.ProductsBoardsRoute=Ember.Route.extend({model:function(){return this.modelFor('products').filterProperty('type','boards');}});App.ProductsSensorsRoute=Ember.Route.extend({model:function(){return this.modelFor('products').filterProperty('type','sensors');}});App.ProductsRoboticsRoute=Ember.Route.extend({model:function(){return this.modelFor('products').filterProperty('type','robotics');}});App.ProductsController=Ember.ArrayController.extend({needs:['products_index'],previousTransition:'now',sortProperties:['title'],count:function(){return this.get('length');}.property('length'),actions:{closeModal:function(){},addItem:function(item){var bool=false;var tempData=[];if(window.localStorage['ctr-store']!=null){var localData=JSON.parse(localStorage['ctr-store']);var storedItems=localData.cart.records;for(var key in storedItems){if(storedItems.hasOwnProperty(key)){if(storedItems[key].name==item.title){localData.cart.records[key].quantity++;var existing=this.store.update('cart',localData.cart.records[key]);bool=true;localStorage['ctr-store']=JSON.stringify(localData);break;}}}}
if(!bool){var cartItem=this.store.createRecord('cart',{name:item.title,amount:item.price,quantity:1});cartItem.save();}},},});App.ProductsIndexController=Ember.ArrayController.extend({needs:'application',sortProperties:['title'],modelRefresher:function(){this.get('target.router').refresh();},loadMoreItems:function(){this.send('loadItems');},actions:{addItem:function(item){var prodController=this.controllerFor('products');prodController.send('addItem',item);},},});App.ProductsBoardsController=Ember.ArrayController.extend({actions:{addItem:function(item){var prodController=this.controllerFor('products');prodController.send('addItem',item);},},});App.ProductsSensorsController=Ember.ArrayController.extend({actions:{addItem:function(item){var prodController=this.controllerFor('products');prodController.send('addItem',item);},},});App.ProductsRoboticsController=Ember.ArrayController.extend({actions:{addItem:function(item){var prodController=this.controllerFor('products');prodController.send('addItem',item);},},});App.ProductDetailComponent=Ember.Component.extend({classNameBindings:['isOnSale'],isOnSale:function(){return this.get('product.isOnSale');}.property(),actions:{addMe:function(item){this.sendAction('addMe',item);},openModal:function(action,model){this.get('parentView').send('showModal',action,model);},closeModal:function(){this.get('parentView').send('removeModal',action);},}});